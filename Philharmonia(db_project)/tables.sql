-- DROP TABLE IF EXISTS artist CASCADE;
-- DROP TABLE IF EXISTS performance CASCADE;
-- DROP TABLE IF EXISTS building CASCADE;
-- DROP TABLE IF EXISTS genre CASCADE;
-- DROP TABLE IF EXISTS organizator CASCADE;
-- DROP TABLE IF EXISTS artist_to_genre CASCADE;
-- DROP TABLE IF EXISTS impresario CASCADE;
-- DROP TABLE IF EXISTS building_type CASCADE;
-- DROP TABLE IF EXISTS performance_type CASCADE;
-- DROP TABLE IF EXISTS theater CASCADE;
-- DROP TABLE IF EXISTS performance_venue CASCADE;
-- DROP TABLE IF EXISTS palace_of_culture CASCADE;
-- DROP TABLE IF EXISTS estrade CASCADE;
-- DROP TABLE IF EXISTS artist_to_performance CASCADE;
-- DROP TABLE IF EXISTS artist_to_impresario CASCADE;
-- DROP TABLE IF EXISTS flyway_schema_history CASCADE;


CREATE TABLE IF NOT EXISTS building_type(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS building(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL UNIQUE,
	type_id BIGINT NOT NULL REFERENCES building_type ON DELETE CASCADE
);

--concrete types
CREATE TABLE IF NOT EXISTS theater(
	id BIGINT PRIMARY KEY REFERENCES building ON DELETE CASCADE,
	capacity INT NOT NULL CHECK(capacity > 0)
);

CREATE TABLE IF NOT EXISTS performance_venue(
	id BIGINT PRIMARY KEY REFERENCES building ON DELETE CASCADE,
	area INT NOT NULL CHECK(area > 0)
);

CREATE TABLE IF NOT EXISTS estrade(
	id BIGINT PRIMARY KEY REFERENCES building ON DELETE CASCADE,
	scene_height_centimeters INT NOT NULL CHECK(scene_height_centimeters > 0)
);

CREATE TABLE IF NOT EXISTS palace_of_culture(
	id BIGINT PRIMARY KEY REFERENCES building ON DELETE CASCADE,
	floor_num INT NOT NULL CHECK(floor_num > 0)
);


--artists and genres
CREATE TABLE IF NOT EXISTS genre(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS artist(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL,
	surname VARCHAR NOT NULL,
	UNIQUE(name, surname)
);

CREATE TABLE IF NOT EXISTS artist_to_genre(
	artist_id BIGINT NOT NULL REFERENCES artist ON DELETE CASCADE,
	genre_id BIGINT NOT NULL REFERENCES genre ON DELETE CASCADE,
	PRIMARY KEY(artist_id, genre_id)
);

CREATE TABLE IF NOT EXISTS impresario(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL,
	surname VARCHAR NOT NULL,
	UNIQUE(name, surname)
);

CREATE TABLE IF NOT EXISTS artist_to_impresario(
	artist_id BIGINT NOT NULL REFERENCES artist ON DELETE CASCADE,
	impresario_id BIGINT NOT NULL REFERENCES impresario ON DELETE CASCADE,
	PRIMARY KEY(artist_id, impresario_id)
);

CREATE TABLE IF NOT EXISTS sponsor(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL,
	surname VARCHAR NOT NULL,
	UNIQUE(name, surname)
);

CREATE TABLE IF NOT EXISTS performance_type(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS performance(
	id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name VARCHAR NOT NULL,
	type_id BIGINT NOT NULL REFERENCES performance_type,
	sponsor_id BIGINT NOT NULL REFERENCES sponsor,
	building_id BIGINT NOT NULL REFERENCES building ON DELETE CASCADE,
	performance_date DATE NOT NULL
);

CREATE TABLE IF NOT EXISTS artist_to_performance(
	artist_id BIGINT NOT NULL REFERENCES artist ON DELETE CASCADE,
	performance_id BIGINT NOT NULL REFERENCES performance ON DELETE CASCADE,
	PRIMARY KEY(performance_id, artist_id)
);

CREATE TABLE IF NOT EXISTS contest_place(
	artist_id BIGINT NOT NULL REFERENCES artist ON DELETE CASCADE,
	performance_id BIGINT NOT NULL REFERENCES performance ON DELETE CASCADE,
	place INT NOT NULL CHECK(place > 0),
	PRIMARY KEY(performance_id, artist_id),
	UNIQUE(performance_id, place)
);

